# D & (E & F -> G)

#OBSERVATIONS (controller's input):
empty, has_neighbors, rightmost, land

#ACTIONS (controller's output):
extract
put
stop

(
  # D (preconditions, non-concurrent actions, and stop action):
  G( (extract -> !empty) && (put -> has_neighbors) &&
     ((extract && !put && !stop) || (!extract && put && !stop) || (!extract && !put && stop)) &&
     (stop -> X stop)
  )
  &&
  (
    ( # E (initial conditions, effects, and frame):
      !empty &&
      G( put -> X( !empty && !has_neighbors ) ) &&
      G( stop -> ((empty <-> X empty) && (has_neighbors <-> X has_neighbors) && (rghtmost <-> X rghtmost) && (land <-> X land)) )
      &&
      # F (temporal assumptions):
      ( GF(extract) -> F(empty && !has_neighbors) )
    )
    ->
    # Goal:
    ( ( FG(rightmost && land) || FG(empty && !has_neighbors) ) && G( (has_neighbors && land && !rightmost) -> (!extract U put) ) && G( (rightmost && land) -> stop ) )
  )
)


# one line
G( (extract -> !empty) && (put -> has_neighbors) && ((extract && !put && !stop) || (!extract && put && !stop) || (!extract && !put && stop)) && (stop -> X stop)) && ( ( !empty && G( put -> X( !empty && !has_neighbors ) ) && G( stop -> ((empty <-> X empty) && (has_neighbors <-> X has_neighbors) && (rghtmost <-> X rghtmost) && (land <-> X land)) ) && ( GF(extract) -> F(empty && !has_neighbors) )) -> ( ( FG(rightmost && land) || FG(empty && !has_neighbors) ) && G( (has_neighbors && land && !rightmost) -> (!extract U put) ) && G( (rightmost && land) -> stop ) ))




input: empty, has_neighbors, rightmost, land
output: extract, put, stop

